package com.leetcode.array;

import org.junit.Test;

import static org.assertj.core.api.Assertions.assertThat;

public class L88MergeSortedArrayTest {

    /**
     * nums1 = [1,2,3,0,0,0], m = 3
     *  * nums2 = [2,5,6],       n = 3
     *  *
     *  * 输出:   [1,2,2,3,5,6]
     */
    @Test
    public void smoke() {
        int[] nums1 = new int[] {1,2,3,0,0,0};
        int[] nums2 = new int[] {2,5,6};

        new L88MergeSortedArray().merge(nums1, 3, nums2, 3);
        assertThat(nums1).containsExactly(1,2,2,3,5,6);
    }

    /**
     * nums1 = [1, 2, 3, 7, 8, 0, 0, 0, 0]
     * nums2 = [2, 5, 6, 9]
     */
    @Test
    public void smoke1() {
        int[] nums1 = new int[] {1, 2, 3, 7, 8, 0, 0, 0, 0};
        int[] nums2 = new int[] {2, 5, 6, 9};

        new L88MergeSortedArray().merge(nums1, 5, nums2, 4);
        assertThat(nums1).containsExactly(1,2,2,3,5,6,7,8,9);
    }

    /**
     * [-1,0,0,3,3,3,0,0,0]
     * 6
     * [1,2,2]
     * 3
     */
    @Test
    public void smoke2() {
        int[] nums1 = new int[] {-1,0,0,3,3,3,0,0,0};
        int[] nums2 = new int[] {1,2,2};

        new L88MergeSortedArray().merge(nums1, 6, nums2, 3);
        assertThat(nums1).containsExactly(-1,0,0,1,2,2,3,3,3);
    }

    /**
     * 输入:
     * [-10,-10,-9,-9,-9,-8,-8,-7,-7,-7,-6,-6,-6,-6,-6,-6,-6,-5,-5,-5,-4,-4,-4,-3,-3,-2,-2,-1,-1,0,1,1,1,2,2,2,3,3,3,4,5,5,6,6,6,6,7,7,7,7,8,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
     * 55
     * [-10,-10,-9,-9,-9,-9,-8,-8,-8,-8,-8,-7,-7,-7,-7,-7,-7,-7,-7,-6,-6,-6,-6,-5,-5,-5,-5,-5,-4,-4,-4,-4,-4,-3,-3,-3,-2,-2,-2,-2,-2,-2,-2,-1,-1,-1,0,0,0,0,0,1,1,1,2,2,2,2,2,2,2,2,3,3,3,3,4,4,4,4,4,4,4,5,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,8,8,8,8,9,9,9,9]
     * 99
     * 输出
     * [-10,-10,-10,-10,-9,-9,-9,-9,-9,-9,-9,-8,-8,-8,-8,-8,-7,-7,-7,-7,-7,-7,-7,-7,-6,-6,-6,-6,-6,-5,-5,-5,-5,-5,-4,-4,-4,-4,-4,-3,-3,-3,-2,-2,-2,-2,-2,-2,-2,-1,-1,-1,-1,0,0,0,0,0,1,1,1,2,2,2,2,2,2,2,2,3,3,3,3,4,4,4,4,4,4,4,5,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,8,8,8,8,9,9,9,9,9,-8,-8,-7,-7,-7,-6,-6,-6,-6,-6,-6,-5,-5,-5,-4,-4,-4,-3,-3,-2,-2,-1,0,1,1,1,2,2,2,3,3,3,4,5,5,6,6,6,6,7,7,7,7,8,9,9,9]
     * 预期结果
     * [-10,-10,-10,-10,-9,-9,-9,-9,-9,-9,-9,-8,-8,-8,-8,-8,-8,-8,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-5,-5,-5,-5,-5,-5,-5,-5,-4,-4,-4,-4,-4,-4,-4,-4,-3,-3,-3,-3,-3,-2,-2,-2,-2,-2,-2,-2,-2,-2,-1,-1,-1,-1,-1,0,0,0,0,0,0,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,9,9,9,9,9,9,9,9]
     * 提交时间
     */
}
